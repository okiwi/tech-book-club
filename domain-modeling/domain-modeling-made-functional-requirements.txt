workflow "Place Order" =
	input: OrderForm
	output:
		OrderPlaced event (put on a pile to send to other teams)
		OR InvalidOrder (put on appropriate pile)
	// step 1
	do ValidateOrder
	If order is invalid then:
		add InvalidOrder to pile
		stop
	// step 2
	do PriceOrder
	// step 3
	do SendAcknowledgementToCustomer
	// step 4
	return OrderPlaced event (if no errors)

substep "ValidateOrder" =
	input: UnvalidatedOrder
	output: ValidatedOrder OR ValidationError
	dependencies: CheckProductCodeExists, CheckAddressExists
	validate the customer name
	check that the shipping and billing address exist
	for each line:
		check product code syntax
		check that product code exists in ProductCatalog
	if everything is OK, then:
		return ValidatedOrder
	else:
		return ValidationError

substep "PriceOrder" =
	input: ValidatedOrder
	output: PricedOrder
	dependencies: GetProductPrice
	for each line:
		get the price for the product
		set the price for the line
	set the amount to bill ( = sum of the line prices)


substep "SendAcknowledgementToCustomer" =
	input: PricedOrder
	output: None
	create acknowledgment letter and send it
	and the priced order to the customer


context: Order-Taking
data WidgetCode = string starting with "W" then 4 digits
data GizmoCode = string starting with "G" then 3 digits
data ProductCode = WidgetCode OR GizmoCode

data OrderQuantity = UnitQuantity OR KilogramQuantity
data UnitQuantity = integer between 1 and 1000
data KilogramQuantity = decimal between 0.05 and 100.00

data UnvalidatedOrder =
	UnvalidatedCustomerInfo
	AND UnvalidatedShippingAddress
	AND UnvalidatedBillingAddress
	AND list of UnvalidatedOrderLine

data UnvalidatedOrderLine =
	UnvalidatedProductCode
	AND UnvalidatedOrderQuantity

data ValidatedOrder =
	ValidatedCustomerInfo
	AND ValidatedShippingAddress
	AND ValidatedBillingAddress
	AND list of ValidatedOrderLine
data ValidatedOrderLine =
	ValidatedProductCode
	AND ValidatedOrderQuantity

data PricedOrder =
	ValidatedCustomerInfo
	AND ValidatedShippingAddress
	AND ValidatedBillingAddress
	AND list of PricedOrderLine // different from ValidatedOrderLine
	AND AmountToBill

data PricedOrderLine =
	ValidatedOrderLine
	AND LinePrice

data PlacedOrderAcknowledgment =
	PricedOrder
	AND AcknowledgmentLetter
